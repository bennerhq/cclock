#!/bin/bash
# ----------------------------------------------------------------------------
# "THE BEER-WARE LICENSE" (Revision 43):
#
# Github Co-pilot & <jens@bennerhq.com> wrote this file.  As long as you 
# retain this notice you can do whatever you want with this stuff. If we meet 
# some day, and you think this stuff is worth it, you can buy me a beer in 
# return.   
#
# /benner
# ----------------------------------------------------------------------------

# This script reads the content of a YAML file and writes it to a C++ header
script_name=$(basename "$0")
if [ $# -lt 2 ]; 
then
    echo "Usage: $script_name <input_file> <output_file>"
    exit 1
fi

input_file="$1"
output_file="$2"

# Convert the output file name to uppercase and assign it to FIDO
def_include=$(echo "${output_file}" | tr '[:lower:]' '[:upper:]' | tr '/' '_' | tr '.' '_')

# Check if the input file is newer than the output file
if [ "$input_file" -nt "$output_file" ]; 
then
    # Read the content of the input file
    content=$(<"$input_file")

    # Replace strings of format $:filename with the content of the file "filename"
    while [[ "$content" =~ \$:([a-zA-Z0-9_/.-]+) ]]; 
    do
        filename="${BASH_REMATCH[1]}"
        if [ -f "$filename" ]; 
        then
            file_content=$(<"$filename")

            if [[ "$filename" = *.svg ]]; 
            then
                file_content=$(echo "$file_content" | sed 's/"/\\"/g')
                file_content=$(echo "$file_content" | tr -d '\n')
                file_content=$(echo "$file_content" | tr -s ' ' | sed 's/  / /g')

                content="${content//\$:$filename/$file_content}"
            else
                file_content=$(base64 -i "$filename")

                content="${content//\$:$filename/data:image/${filename##*.};base64,$file_content}"
            fi
        else
            echo "Error: File $filename not found."
            exit 1
        fi
    done

    # Write the content to the output file in the specified format
    echo '// -------------------------------------------------------------------------------------' > "$output_file"
    echo "//                           !!! THIS FILE IS AUTO GENERATED !!!" >> "$output_file"
    echo "//                       !!! DON'T EDIT, ALL CHANGES WILL BE LOST !!!" >> "$output_file"
    echo "//" >> "$output_file"
    echo "// Edit $input_file to change the content of this file. By running" >> "$output_file"
    echo "// $script_name the content of this file is generate." >> "$output_file"
    echo '// -------------------------------------------------------------------------------------' >> "$output_file"
    echo '' >> "$output_file"
    echo "#ifndef $def_include" >> "$output_file"
    echo "#define $def_include" >> "$output_file"
    echo '' >> "$output_file"
    echo '#include <yaml-cpp/yaml.h>' >> "$output_file"
    echo '' >> "$output_file"
    echo 'std::string DEFAULT_CONFIG_YAML = std::string(' >> "$output_file"
    echo "R\"($content" >> "$output_file"
    echo ')");' >> "$output_file"
    echo '' >> "$output_file"
    echo "#endif /* $def_include */" >> "$output_file"

    # Set the output file's timestamp to match the input file's timestamp
    touch -r "$input_file" "$output_file"

    echo "$input_file: written to $output_file"
fi
